!function(r){r.su.moduleManager.define("initLogin",{services:["ajax"],stores:[],views:["initLoginView"],deps:["main"],models:["initLoginModel","initLoginControl"],listeners:{"ev_on_launch":function(n,e,o,i,t,r,a){a.ajax.request({proxy:"keyProxy",success:function(n){var o=n;o&&o.password&&(e.encryptKey=o.password)}})}},init:function(o,n,e,i,t,r){this.control({"#init-login-confirm":{"keyup":function(n){13==n.keyCode&&o.doInitLogin()}},"#init-login-button":{"ev_button_click":function(){o.doInitLogin()}}})}},function(e,n,t,o,a,i){return{encryptKey:null,doInitLogin:function(){if(t.initLoginControl.validate()){var o=t.initLoginControl.password.getValue();if(t.initLoginControl.password.getValue()!=t.initLoginControl.confirm.getValue())return t.initLoginControl.confirm.setError(r.su.CHAR.ERROR["00000080"]),!1;var n=t.initLoginControl.password.doEncrypt(e.encryptKey);t.initLoginModel.password.setValue(n),i.ajax.request({proxy:"authProxy",success:function(n){r.su.encryptor.setRSAKey(n.key[0],n.key[1]),r.su.encryptor.setSeq(n.seq),r.su.encryptor.genAESKey(),r.su.encryptor.setHash("admin",o),r.encrypt.encryptManager.recordEncryptor(),t.initLoginModel.login({success:e.loginSuccessDealer,fail:e.loginFailDealer})}})}},loginSuccessDealer:function(n,o){var e,i,t,r=n.stok||(e="12345",i=top.location.href,0<=(t=i.indexOf("stok="))&&(e=i.substring(t+5)),e);localStorage&&(a.main.setToken(r),a.main.reload())},loginFailDealer:function(n,o){var e=!(n.data&&n.data.failureCount&&5<=n.data.failureCount);if(n.data&&n.data.hasOwnProperty("errorcode")&&e){var i=String(n.data.errorcode).replace(/^-/,"E");t.localLoginControl.password.setErrorHtml(r.su.CHAR.ERROR[i])}else;}}})}(jQuery);